#!/bin/bash -e
#
# S2I run script for the 'springboot-sti' image.
# The run script executes the server that runs your application.
#
# For more information see the documentation:
#	https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#

export TOMCAT_DIR=/opt/tomcat
export JMX_METRICS=
export PRECHECK=

if [ -z "$TIMEZONE" ]; then
	echo "···································································································"
	echo "---> TIMEZONE ENV NOT FOUND - START WITH DEFAULT VALUES"
	echo "---> VALUES: America/Montevideo | America/El_Salvador"
	echo "···································································································"
else
	echo "···································································································"
	echo "---> TIMEZONE ENV FOUND!: " $TIMEZONE
	echo "···································································································"
	cat /usr/share/zoneinfo/$TIMEZONE > /etc/localtime && \
	echo $TIMEZONE > /etc/timezone
fi

if [ ! -z "$WAITFOR_HOST" ] && [ ! -z "$WAITFOR_PORT" ] ; then
	echo "···································································································"
	echo "---->  WAITFOR  ENABLE.."
    until nc -z -v -w5 $WAITFOR_HOST $WAITFOR_PORT &> /dev/null; do echo waiting for $WAITFOR_HOST; sleep 10; done;	
	echo "···································································································"
fi

if [ "$PROMETHEUS_ENABLE" == 1 ] && [ "$JOLOKIA_ENABLE" == 1 ]; then
echo "---->  ERROR -  FOUND PROMETHEUS_ENABLE = 1 AND JOLOKIA_ENABLE = 1"
echo "---->  YOU MUST SELECT ONE!"
echo "---->  CONTINUING WITHOUT ACTIVE METRICS...."
else
PRECHECK=1
fi


if [ "$JOLOKIA_ENABLE" == 1 ] && [ "$PRECHECK" == 1 ] ; then
echo "---->  JOLOKIA_ENABLE FOUND!.."
echo "---->  METRICS ENDPOINT 0.0.0.0:8787/jolokia"
JMX_METRICS=-javaagent:/usr/libexec/s2i/jolokia.jar=host=0.0.0.0,protocol=http,port=8787
fi

if [ "$PROMETHEUS_ENABLE" == 1 ] && [ "$PRECHECK" == 1 ]; then
echo "---->  PROMETHEUS_ENABLE FOUND!.."
echo "---->  METRICS ENDPOINT 0.0.0.0:8787/metrics"
JMX_METRICS=-javaagent:/usr/libexec/s2i/prometheus.jar=0.0.0.0:8787:/usr/libexec/s2i/prometheus-config.yml
fi

	echo "···································································································"
	echo "STARTING APP..."
	echo "···································································································"

if [ ! -z "$CUSTOM_JAVA_OPTS" ]; then
	echo "···································································································"
	echo "CUSTOM_JAVA_OPTS FOUND!"
	export  JAVA_OPTS="$JMX_METRICS $CUSTOM_JAVA_OPTS"
	echo "···································································································"
else

if [ "$JAVA_VERSION_CHECK" == 8 ]; then
echo "----> DETECTED JAVA = 8"
export JAVA_OPTS="-XX:MaxRAMFraction=1 -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Dfile.encoding=UTF8 -XX:+ExitOnOutOfMemoryError -Djava.net.preferIPv4Stack=true"
fi

if [ "$JAVA_VERSION_CHECK" == 11 ]; then
echo "----> DETECTED JAVA VERSION >= 11"
export JAVA_OPTS="$JMX_METRICS -Djava.awt.headless=true -XX:+UseContainerSupport -XX:MaxRAMPercentage=100.0 -Dfile.encoding=UTF8 -XX:+ExitOnOutOfMemoryError -Djava.net.preferIPv4Stack=true"
fi
fi

if [ "$AUTO_DEPLOY_FOLDER" == 1 ]; then
echo "----> DETECTED AUTO_DEPLOY_FOLDER"
/usr/libexec/s2i/auto_deploy &>>/dev/stdout &
autodeploy=$!
$TOMCAT_DIR/bin/catalina.sh run &>>/dev/stdout &
tomcat=$!

	while true
	do
	kill -0 $autodeploy &>/dev/null
	kill -0 $tomcat &>/dev/null
	sleep 5
	done

fi

exec $TOMCAT_DIR/bin/catalina.sh run 